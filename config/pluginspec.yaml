pluginInfo:
  # This is default sample specification
  # Feel free to change it
  # Call flowpdk showdoc pluginspec to see the list of available fields and their description
  pluginName: 'EC-BitbucketServer'
  version: '0.2.0'
  description: 'Bitbucket Server On Premises integration'
  author: 'Shaohua Wen <swen@cloudbees.com>'
  supportUrl: 'none'
  category: 'Utilities'
  shell: 'ec-groovy'

# REST-backed plugin configuration
configuration:
  checkConnection: true
  parameters:
  restConfigInfo:
    endpointDescription: Link to the Bitbucket site
    endpointLabel: REST Endpoint
    checkConnectionUri: /rest/api/1.0/projects
    headers: {Accept: "application/json"}
    authSchemes:
      bearer:
        passwordLabel: 'Bearer token'
        description: 'Token to connect to...'
      basic:
        userNameLabel: User Name
        passwordLabel: Password/Token
        description: Please provide username and password/token to use for the connection.
        credentialLabel: Basic/Token credential
      anonymous:
        checkConnectionUri: /rest/api/1.0/projects
  customCheckConnection: false
  hasDebugLevel: true
  hasProxySupport: true

webhook:
  secretRequired: false
  displayName: EC-BitbucketServer
  parameters:
    - name: repositories
      label: Repositories
      htmlDocumentation: |
        List of repositories (projectName/repositoryName), separated by a newline.
        Examples: <b>'myproj/testrepo'</b>, <b>'myproj/testrepo\nmyproj/testrepo2'</b>.
      documentation: |
        List of repositories (projectName/repositoryName), separated by a newline.
        Examples: 'myproj/testrepo', 'myproj/testrepo\nmyproj/testrepo2'.
      type: textarea
      required: true
    - name: includeBranches
      label: Include Branches
      value: main
      documentation: |
        List of branch names or patterns, separated by a comma.
        Incoming events will be discarded if not relate to one of the specified branches.
        Leave empty to process events for all branches except ones specified in the "Exclude Branches" parameter.
      type: textarea
    - name: excludeBranches
      label: Exclude Branches
      type: textarea
      documentation: |
        List of branch names or patterns, separated by a comma.
        Incoming events will be discarded if relate to one of the specified branches.
        Leave empty to process events for all branches or the ones specified in the "Include Branches" parameter.
      required: false
    - name: pushEvent
      label: Process Push Events?
      type: checkbox
      documentation: |
        Check this if you want trigger to be run when the new commit appears in one of the monitored branches.
      value: false
      checkedValue: true
      uncheckedValue: false
      initiallyChecked: 1
    - name: prEvent
      label: Process Pull Request Events?
      documentation: |
        Check this if you want the trigger to be run when the Pull Request event occurs.
      type: checkbox
      required: false
      value: false
      checkedValue: true
      uncheckedValue: false
      initiallyChecked: 0
    - name: includePrActions
      label: Include PR Actions
      type: textarea
      dependsOn: prEvent
      condition: ${prEvent} == "true"
      value: 'merged'
      documentation: |
        List of comma-separated values. Run trigger when one of the following actions has occurred.
        Can be one of:
        'opened',
        'modifed',
        'merged',
        'declined',
        'deleted',
        'reviewer:approved',
        'reviewer:unapproved',
        'reviewer:updated',
        'reviewer:needs_work',
        'comment:added',
        'comment:edited',
        'comment:deleted'
      htmlDocumentation: |
        List of comma-separated values. Run trigger when one of the following actions has occurred.
        Can be one of:
        <ul>
        <li>opened</li>
        <li>modifed</li>
        <li>merged</li>
        <li>declined</li>
        <li>deleted</li>
        <li>reviewer:approved</li>
        <li>reviewer:unapproved</li>
        <li>reviewer:updated</li>
        <li>reviewer:needs_work</li>
        <li>comment:added</li>
        <li>comment:edited</li>
        <li>comment:deleted</li>
        </ul>

procedures:
-
  name: 'Merge Pull Request'
  description: 'Test whether a pull request can be merged.'
  hasConfig: true
  shell: 'ec-groovy'
  parameters:
  -
    name: projectKey
    documentation: Key of the bitbucket project.
    required: true
    type: entry
    label: Project Key
    restParamInfo:
      in: path
  -
    name: repositorySlug
    documentation: Slug of the bitbucket repository.
    required: true
    type: entry
    label: Repository Slug
    restParamInfo:
      in: path
  -
    name: pullRequestId
    documentation: Id of the bitbucket pull request.
    required: true
    type: entry
    label: Pull Request Id
    restParamInfo:
      in: path
  -
    name: version
    documentation: Version of the bitbucket pull request.
    required: true
    type: entry
    label: Pull Request version
    value: -1
    restParamInfo:
      in: query
  outputParameters:
  -
    name: BitBucketMergeResponse
    description: the response of the merge.
  restProcedureInfo:
    url: '/rest/api/1.0/projects/{{projectKey}}/repos/{{repositorySlug}}/pull-requests/{{pullRequestId}}/merge'
    methodName: 'mergePullRequest'
    httpMethod: 'POST'